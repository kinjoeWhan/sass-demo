@charset "utf-8";
$width100: 100px;
$height100: 100px;
$css3-property-array: transform animation animation-delay;

@mixin size100 {
  width: $width100;
  height: $height100;
}
@mixin load-common {
  margin: 50px auto;
  position: relative;
}
@mixin span-common: {
  display: inline-block;
  background: lightgreen;
}
// 定位
@mixin position($val) {
  @each $attr_name,$attr_v in $val {
    #{$attr_name}: $attr_v;
  }
}
@mixin compatibility($type $val) {
  -webkit-#{$type}: $val;
  -moz-#{$type}: $val;
  -ms-{$type}: $val;
  -o-#{$type}: $val;
  #{$type}: $val;
}
@mixin delay-and-rotate($delay, $rotate) {
  @include compatibility(animation-delay, $delay);
  @include compatibility(transform, $rotate);
}
@function get_attr_name($attr_name, $attr_v) {
  @if (index($css3-property-array, $attr_name)) {
    @return (
      -webkit-#{$attr_name}: $attr_v;
      -moz-#{$attr_name}: $attr_v;
      -ms-{$attr_name}: $attr_v;
      -o-#{$attr_name}: $attr_v;
      #{$attr_name}: $attr_v;
    );
  }
  @else {
    @return (#{$attr_name}: $attr_v);
  }
}
// 定义keyframes
@mixin keyframes($keyframesname, $valObj) {
  @keyframes #{$keyframesname} {
    @each $index,$val in $valObj {
      #{$index} {
        @each $attr_name,$attr_v in $val {
          #{$attr_name}: $attr_v;
        }
      }
    }
  }
  @-webkit-keyframes #{$keyframesname} {
    @each $index,$val in $valObj {
      #{$index} {
        @each $attr_name,$attr_v in $val {
          #{$attr_name}: $attr_v;
        }
      }
    }
  }
  @-moz-keyframes #{$keyframesname} {
    @each $index,$val in $valObj {
      #{$index} {
        @each $attr_name,$attr_v in $val {
          #{$attr_name}: $attr_v;
        }
      }
    }
  }
  @-ms-keyframes #{$keyframesname} {
    @each $index,$val in $valObj {
      #{$index} {
        @each $attr_name,$attr_v in $val {
          #{$attr_name}: $attr_v;
        }
      }
    }
  }
  @-o-keyframes #{$keyframesname} {
    @each $index,$val in $valObj {
      #{$index} {
        @each $attr_name,$attr_v in $val {
          #{$attr_name}: $attr_v;
        }
      }
    }
  }
}

// page调用
.main {
  width: 100%;
  height: auto;
}
/* the first loading */ 
.load{
  @include size100;
  @include load-common;
  span{
    position: absolute;
    width: 30px;
    height: 10px;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
    @include span-common;
    @include compatibility(animation, load 1.04s ease infinite);
  }
  @for $num from 1 to 9 {
    span:nth-child( #{$num} ){
      @if( $num == 1 ){
        @include position((left: 0, top: 50%));
        margin-top: -5px;
        @include compatibility(animation-delay, 0.13s);
      }      
      @else if( $num == 2 ){
        @include position((left: 10px, top: 20px));
        //@include compatibility(animation-delay, 0.26s);
        //@include compatibility(transform, rotate(45deg));
        @include delay-and-rotate(0.26s, rotate(45deg));
      }
      @else if( $num == 3 ){
        @include position((left: 37%, top: 10px));
        @include delay-and-rotate(0.39s, rotate(90deg));
      }      
      @else if( $num == 4 ){
        @include position((right: 10px, top: 20px));
        @include delay-and-rotate(0.52s, rotate(135deg));
      }
      @else if( $num == 5 ){
        @include position((right: 0, top: 50%));
        margin-top: -5px;
        @include delay-and-rotate(0.65s, rotate(180deg));
      }
      @else if( $num == 6 ){
        @include position((right: 10px, bottom: 20px));
        @include delay-and-rotate(0.78s, rotate(225deg));
      }
      @else if( $num == 7 ){
        @include position((left: 37%, bottom: 10px));
        margin-top: -15px;
        @include delay-and-rotate(0.91s, rotate(270deg));
      }
      @else( $num == 8 ){
        @include position((left: 10px, bottom: 20px));
        @include delay-and-rotate(1.04s, rotate(315deg));
      }
    }
  }
}
/* the second loading */ 
.circle-dot-loading{
  @include size100;
  @include load-common;
  span{
    position:absolute;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    @include span-common;
    @include compatibility(animation, load 1.04s ease infinite);
  }
  @for $num fron 1 through 8 {
    @if( $num == 1 ){
      @include position((left: 0, top: 46%));
      @include compatibility(animation-delay, 0.13s);
    }
    @else if( $num == 2 ){
      @include position((left: 11%, top: 20%));
      @include compatibility(animation-delay, 0.26s);
    }
    @else if( $num == 3 ){
      @include position((left: 42.5%, top: 4px));
      @include compatibility(animation-delay, 0.39s);
    }
    @else if( $num == 4 ){
      @include position((right: 10%, top: 18%));
      @include compatibility(animation-delay, 0.52s);
    }
    @else if( $num == 5 ){
      @include position((right: 0, top: 46%));
      @include compatibility(animation-delay, 0.65s);
    }
    @else if( $num == 6 ){
      @include position((right: 14%, bottom: 15%));
      @include compatibility(animation-delay, 0.78s);
    }
    @else if( $num == 7 ){
      @include position((right: 43%, bottom: 5px));
      @include compatibility(animation-delay, 0.91s);
    }
    @else{
      @include position((left: 15%, bottom: 17%));
      @include compatibility(animation-delay, 1.04s);
    }
  }
}
/* the third loading */ 
.escape-dot-loading {
  @include size100;
  @include load-common;
  div {
    @include size100;
    position: absolute;
    @include compatibility(animation, escapte-dot-loading 2.08s linear infinite);
    span {
      position: absolute;
      @include position((left: 50%));
      @include span-common;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      margin-left: -10px;
      margin-top: -10px;
    }
    @for $item from 1 to 5{
      &:nth-child(#{$item}) {
        @if( $item == 1 ){
          @include compatibility(animation-delay, 0.2s);
        }
        @else if( $item == 2 ){
          @include compatibility(animation-delay, 0.4s);
        }
        @else if( $item == 3 ){
          @include compatibility(animation-delay, 0.6s);
        }
        @else if( $item == 4 ){
         @include compatibility(animation-delay, 0.8s);
        }
      }
    }
  }
}

/* the fourth loading */ 
.stick-loading {
  width: 80px;
  height: 80px;
  margin: 100px auto;
  span {    
    width: 8px;
    height: 100%;
    border-radius: 4px;
    @include span-common;
    @include compatibility(animation, stick-loading 1s ease infinite);
  }
  @for $item from 1 to 6{
    span:nth-child(#{$item}) {
      @if( $item == 2 ){
        @include compatibility(animation-delay, 0.2s);
      }
      @else if( $item == 3 ){
        @include compatibility(animation-delay, 0.4s);
      }
      @else if( $item == 4 ){
        @include compatibility(animation-delay, 0.6s);
      }
      @else {
        @include compatibility(animation-delay, 0.8s);
      }
    }
  }
}

.dot-loading {
  width: 110px;
  height: 15px;
  margin: 50px auto;
  span {    
    width: 15px;
    height: 100%;
    border-radius: 50%;
    @include span-common;
    @include compatibility(animation, dot-loading 1s ease infinite);
    &:last-child {
      margin-right: 0;
    }
  }
  @for $item from 1 to 6{
    span:nth-child(#{$item}) {
      @if ($item == 1 ) {
        @include compatibility(animation-delay, 0.13s);
      }
      @else if( $item == 2 ){
        @include compatibility(animation-delay, 0.26s);
      }
      @else if( $item == 3 ){
        @include compatibility(animation-delay, 0.39s);
      }
      @else if( $item == 4 ){
        @include compatibility(animation-delay, 0.52s);
      }
      @else {
        @include compatibility(animation-delay, 0.65s);
      }
    }
  }
}

.dex-box-loading {
  @extend .dot-loading;
  span {
    border-radius: 0;
    @include compatibility(animation, dex-dot-loading 1s ease infinite);
  }
}

// 调用定义的keyframes
// params： keyframesName, keyframesValues

// load的 keyframes
$load_opacity_1: (opacity: 1);
$load_val_02: (opacity: 0.2);
$load_obj: (0%: $load_opacity_1, 100%: $load_val_02);
@include keyframes('load', $load_obj);

// escape 的动画规则
$load_opacity_0: (opacity: 0);
$load_escape_obj: (
  0%: get_attr_name(transform, rotate(0deg)),
  10%: get_attr_name('transform', rotate(45deg)), //transform可加引号当字符串
  // join 往数组中新增元素
  50%:  join(get_attr_name(transform, rotate(160deg)), $load_opacity_0),
  62%:  $load_opacity_0,
  65%:  join($load_opacity_0,get_attr_name(transform, rotate(200deg))),
  90%:  get_attr_name(transform, rotate(340deg)),
  100%: get_attr_name(transform, rotate(360deg))
);
@include keyframes('escape-dot-loading', $load_escape_obj);

// stick-loading 的动画规则
$load_stick_obj: (
  0%: (height: 40px, background: lightgreen),
  50%: (height: 70px, margin: -15px 0, background: lightblue),
  100%: (height: 40px, background: lightgreen)
);
@include keyframes('stick-loading', $load_stick_obj);

// dot-loading  的keyframes
$load_dot_obj: (
  0%: $load_opacity_0,
  100%: $load_opacity_1
);
@include keyframes('dot-loading', $load_dot_obj);

// deg-box-loading 的keyframes
$load_deg_box_obj: (
  0%:  join($load_opacity_1,get_attr_name(transform, scale(1))),
  100%:  join($load_opacity_0,get_attr_name(transform, rotate(90deg) scale(0.3)))
); 
@include keyframes('dex-dot-loading', $load_deg_box_obj);



